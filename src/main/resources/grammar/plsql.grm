PACKAGE:
    {IDENTIFIER, "PACKAGE"}
    PACKAGE_NAME
    AUTHID
    IS_AS
    DECLARATIONS+
    {IDENTIFIER, "END"}
    ANYTHING
    {SEMICOLON};

PACKAGE_NAME+: PART2;
PACKAGE_NAME+: PART1 {DOT} PART2;

PART2+: IDENTIFIER;
PART1+: IDENTIFIER;

REFERENCE+: IDENTIFIER REFERENCE_;

REFERENCE_: ^;
REFERENCE_: {DOT} IDENTIFIER REFERENCE_;

AUTHID: ^;
AUTHID+: {IDENTIFIER, "AUTHID"} AUTHID_;

AUTHID_: {IDENTIFIER, "CURRENT_USER"+};
AUTHID_: {IDENTIFIER, "DEFINER"+};

IS_AS: {IDENTIFIER, "IS"};
IS_AS: {IDENTIFIER, "AS"};

DECLARATIONS: ^;
DECLARATIONS: {DOCUMENTATION} DECLARATIONS;
DECLARATIONS: DECLARATION {SEMICOLON} DECLARATIONS;

DECLARATION: SUBPROGRAM;
DECLARATION: VARIABLE+;
DECLARATION: CONSTANT+;
DECLARATION: TYPE+;
DECLARATION: CURSOR+;
DECLARATION: EXCEPTION+;
DECLARATION: PACKAGE_PRAGMA+;
DECLARATION: SUBTYPE+;

SUBPROGRAM: PROCEDURE+;
SUBPROGRAM: FUNCTION+;

PROCEDURE:
    ANNOTATIONS+
    {IDENTIFIER, "PROCEDURE"}
    SUBPROGRAM_NAME
    PARAMETERS+
    CALL_SPECIFICATION;

SUBPROGRAM_NAME+: IDENTIFIER;

IDENTIFIER: {IDENTIFIER, +};
IDENTIFIER: {QUOTED_IDENTIFIER, +};

PARAMETERS: ^;
PARAMETERS: {LEFT_BRACKET} PARAMETER PARAMETERS_ {RIGHT_BRACKET};

PARAMETERS_: ^;
PARAMETERS_: {COMMA} PARAMETER PARAMETERS_;

PARAMETER+: ANNOTATIONS+ PARAMETER_NAME+ PARAMETER_DIRECTION+ PARAMETER_TYPE+ PARAMETER_DEFAULT+;

PARAMETER_NAME: IDENTIFIER;

PARAMETER_DIRECTION: ^;
PARAMETER_DIRECTION: {IDENTIFIER, "IN"+} PARAMETER_DIRECTION;
PARAMETER_DIRECTION: {IDENTIFIER, "OUT"+} PARAMETER_DIRECTION;
PARAMETER_DIRECTION: {IDENTIFIER, "NOCOPY"+} PARAMETER_DIRECTION;

PARAMETER_TYPE: SIMPLE_PARAMETER_TYPE+;
PARAMETER_TYPE: REFERENCE_TYPE+;

CALL_SPECIFICATION: ^;
CALL_SPECIFICATION+: IS_AS {IDENTIFIER, "LANGUAGE"} AS_LANGUAGE+;

AS_LANGUAGE: AS_LANGUAGE_JAVA+;
AS_LANGUAGE: AS_LANGUAGE_C+;

AS_LANGUAGE_JAVA: {IDENTIFIER, "JAVA"} {IDENTIFIER, "NAME"} {STRING_LITERAL, +};

AS_LANGUAGE_C: {IDENTIFIER, "C"} ANYTHING;

SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "VARCHAR2"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "NVARCHAR2"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "CHAR"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "NCHAR"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "NUMBER"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "LONG"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "DATE"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "BINARY_FLOAT"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "BINARY_DOUBLE"+};
SIMPLE_PARAMETER_TYPE: TIMESTAMP_PARAMETER+;
SIMPLE_PARAMETER_TYPE: INTERVAL_YM_PARAMETER+;
SIMPLE_PARAMETER_TYPE: INTERVAL_DS_PARAMETER+;
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "RAW"+};
SIMPLE_PARAMETER_TYPE: LONG_RAW+;
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "ROWID"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "UROWID"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "CLOB"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "NCLOB"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "BLOB"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "BFILE"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "BOOLEAN"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "PLS_INTEGER"+};
SIMPLE_PARAMETER_TYPE: {IDENTIFIER, "BINARY_INTEGER"+};

TIMESTAMP_PARAMETER: {IDENTIFIER, "TIMESTAMP"} TZ;

TZ: ^;
TZ+: {IDENTIFIER, "WITH"} LTZ {IDENTIFIER, "TIME"} {IDENTIFIER, "ZONE"};

LTZ: ^;
LTZ+: {IDENTIFIER, "LOCAL"};

INTERVAL_YM_PARAMETER: {IDENTIFIER, "INTERVAL"} {IDENTIFIER, "YEAR"} {IDENTIFIER, "TO"} {IDENTIFIER, "MONTH"};
INTERVAL_DS_PARAMETER: {IDENTIFIER, "INTERVAL"} {IDENTIFIER, "DAY"} {IDENTIFIER, "TO"} {IDENTIFIER, "SECOND"};

LONG_RAW: {IDENTIFIER, "LONG"} {IDENTIFIER, "RAW"};

REFERENCE_TYPE: REFERENCE TYPE_MODIFIER ANYTHING NOT_NULL;

TYPE_MODIFIER: ^;
TYPE_MODIFIER+: {PERCENTAGE} {IDENTIFIER, "TYPE"+};
TYPE_MODIFIER+: {PERCENTAGE} {IDENTIFIER, "ROWTYPE"+};

PARAMETER_DEFAULT: ^;
PARAMETER_DEFAULT: DEFAULT EXPRESSION;

DEFAULT: {IDENTIFIER, "DEFAULT"};
DEFAULT: {ASSIGNMENT};

EXPRESSION: ^;
EXPRESSION: {+, +} EXPRESSION;
EXPRESSION: {LEFT_BRACKET+, +} EXPRESSION {RIGHT_BRACKET+, +};

PARAMETERS__: ^;
PARAMETERS__: PARAMETER PARAMETERS__;

DIRECTIVES: ^;
DIRECTIVES: PIPELINED DIRECTIVES;
DIRECTIVES: RESULT_CACHE DIRECTIVES;
DIRECTIVES: DETERMINISTIC DIRECTIVES;
DIRECTIVES: PARALLEL_ENABLE DIRECTIVES;

PIPELINED+: {IDENTIFIER, "PIPELINED"} ANYTHING;
RESULT_CACHE+: {IDENTIFIER, "RESULT_CACHE"} ANYTHING;
DETERMINISTIC+: {IDENTIFIER, "DETERMINISTIC"};
PARALLEL_ENABLE+: {IDENTIFIER, "PARALLEL_ENABLE"} ANYTHING;

FUNCTION: ANNOTATIONS+ {IDENTIFIER, "FUNCTION"} SUBPROGRAM_NAME PARAMETERS+ FUNCTION_RETURN DIRECTIVES+ CALL_SPECIFICATION;

FUNCTION_RETURN+: ANNOTATIONS+ {IDENTIFIER, "RETURN"} PARAMETER_TYPE+;

ANYTHING: ^;
ANYTHING: {} ANYTHING;

VARIABLE: ANNOTATIONS+ VARIABLE_NAME+ VARIABLE_TYPE+ VARIABLE_VALUE;

VARIABLE_NAME: {IDENTIFIER, +};
VARIABLE_NAME: {QUOTED_IDENTIFIER, +};

VARIABLE_TYPE: SIMPLE_VARIABLE_TYPE+;
VARIABLE_TYPE: REFERENCE_TYPE+;

SIMPLE_VARIABLE_TYPE: SIMPLE_TYPE_DECLARATION NOT_NULL;

SIMPLE_TYPE_DECLARATION: VARCHAR2+;
SIMPLE_TYPE_DECLARATION: NVARCHAR2+;
SIMPLE_TYPE_DECLARATION: CHAR+;
SIMPLE_TYPE_DECLARATION: NCHAR+;
SIMPLE_TYPE_DECLARATION: NUMBER+;
SIMPLE_TYPE_DECLARATION: FLOAT+;
SIMPLE_TYPE_DECLARATION: {IDENTIFIER, "LONG"+};
SIMPLE_TYPE_DECLARATION: {IDENTIFIER, "DATE"+};
SIMPLE_TYPE_DECLARATION: {IDENTIFIER, "BINARY_FLOAT"+};
SIMPLE_TYPE_DECLARATION: {IDENTIFIER, "BINARY_DOUBLE"+};
SIMPLE_TYPE_DECLARATION: TIMESTAMP_VARIABLE+;
SIMPLE_TYPE_DECLARATION: INTERVAL_YM_VARIABLE+;
SIMPLE_TYPE_DECLARATION: INTERVAL_DS_VARIABLE+;
SIMPLE_TYPE_DECLARATION: RAW+;
SIMPLE_TYPE_DECLARATION: LONG_RAW+;
SIMPLE_TYPE_DECLARATION: {IDENTIFIER, "ROWID"+};
SIMPLE_TYPE_DECLARATION: UROWID+;
SIMPLE_TYPE_DECLARATION: {IDENTIFIER, "CLOB"+};
SIMPLE_TYPE_DECLARATION: {IDENTIFIER, "NCLOB"+};
SIMPLE_TYPE_DECLARATION: {IDENTIFIER, "BLOB"+};
SIMPLE_TYPE_DECLARATION: {IDENTIFIER, "BFILE"+};
SIMPLE_TYPE_DECLARATION: {IDENTIFIER, "BOOLEAN"+};
SIMPLE_TYPE_DECLARATION: {IDENTIFIER, "PLS_INTEGER"+} ANYTHING;
SIMPLE_TYPE_DECLARATION: {IDENTIFIER, "BINARY_INTEGER"+} ANYTHING;

NOT_NULL: ^;
NOT_NULL: {LOGICAL_OPERATOR, "NOT"} {IDENTIFIER, "NULL"};

VARCHAR2: {IDENTIFIER, "VARCHAR2"} CHARACTER_TYPE_SIZE+;

CHARACTER_TYPE_SIZE: {LEFT_BRACKET} {NUMBER_LITERAL, +} CHARACTER_TYPE_SIZE_SEMANTICS {RIGHT_BRACKET};

CHARACTER_TYPE_SIZE_SEMANTICS: ^;
CHARACTER_TYPE_SIZE_SEMANTICS: {IDENTIFIER, "BYTE"+};
CHARACTER_TYPE_SIZE_SEMANTICS: {IDENTIFIER, "CHAR"+};

NVARCHAR2: {IDENTIFIER, "NVARCHAR2"} CHARACTER_TYPE_SIZE+;
CHAR: {IDENTIFIER, "CHAR"} CHARACTER_TYPE_SIZE+;
CHAR: {IDENTIFIER, "CHAR"};
NCHAR: {IDENTIFIER, "NCHAR"} CHARACTER_TYPE_SIZE+;

NUMBER: {IDENTIFIER, "NUMBER"} NUMBER_PRECISION;

NUMBER_PRECISION: ^;
NUMBER_PRECISION: {LEFT_BRACKET} {NUMBER_LITERAL, +} NUMBER_SCALE {RIGHT_BRACKET};

NUMBER_SCALE: ^;
NUMBER_SCALE: {COMMA} {NUMBER_LITERAL, +};

FLOAT: {IDENTIFIER, "FLOAT"} FLOAT_PRECISION;

FLOAT_PRECISION: ^;
FLOAT_PRECISION: {LEFT_BRACKET} {NUMBER_LITERAL, +} {RIGHT_BRACKET};

TIMESTAMP_VARIABLE+: {IDENTIFIER, "TIMESTAMP"} TIMESTAMP_PRECISION TZ;

TIMESTAMP_PRECISION: ^;
TIMESTAMP_PRECISION+: PRECISION;

PRECISION: {LEFT_BRACKET} {NUMBER_LITERAL, +} {RIGHT_BRACKET};

INTERVAL_YM_VARIABLE:
    {IDENTIFIER, "INTERVAL"}
    {IDENTIFIER, "YEAR"}
    YEAR_PRECISION
    {IDENTIFIER, "TO"}
    {IDENTIFIER, "MONTH"};

YEAR_PRECISION: ^;
YEAR_PRECISION+: PRECISION;

INTERVAL_DS_VARIABLE:
    {IDENTIFIER, "INTERVAL"}
    {IDENTIFIER, "DAY"}
    DAY_PRECISION
    {IDENTIFIER, "TO"}
    {IDENTIFIER, "SECOND"}
    SECOND_PRECISION;

DAY_PRECISION: ^;
DAY_PRECISION+: PRECISION;

SECOND_PRECISION: ^;
SECOND_PRECISION+: PRECISION;

RAW: {IDENTIFIER, "RAW"} {LEFT_BRACKET} {NUMBER_LITERAL, +} {RIGHT_BRACKET};

UROWID: {IDENTIFIER, "UROWID"} UROWID_SIZE;

UROWID_SIZE: ^;
UROWID_SIZE: PRECISION;

VARIABLE_VALUE: ^;
VARIABLE_VALUE+: {ASSIGNMENT} EXPRESSION+;

CONSTANT: ANNOTATIONS+ VARIABLE_NAME+ {IDENTIFIER, "CONSTANT"} VARIABLE_TYPE+ DEFAULT EXPRESSION+;

TYPE: ANNOTATIONS+ {IDENTIFIER, "TYPE"} TYPE_NAME+ {IDENTIFIER, "IS"} TYPE_DECLARATION+;

TYPE_NAME: IDENTIFIER;

TYPE_DECLARATION: RECORD_TYPE+;
TYPE_DECLARATION: NESTED_TABLE_TYPE+;
TYPE_DECLARATION: ASSOCIATIVE_ARRAY_TYPE+;
TYPE_DECLARATION: VARRAY_TYPE+;
TYPE_DECLARATION: REF_CURSOR_TYPE+;

RECORD_TYPE: {IDENTIFIER, "RECORD"} ANYTHING;

NESTED_TABLE_TYPE: {IDENTIFIER, "TABLE"} {IDENTIFIER, "OF"} VARIABLE_TYPE+;

ASSOCIATIVE_ARRAY_TYPE: NESTED_TABLE_TYPE INDEX_BY+;

INDEX_BY: {IDENTIFIER, "INDEX"} {IDENTIFIER, "BY"} VARIABLE_TYPE+;

VARRAY_TYPE: {IDENTIFIER, "VARRAY"} {LEFT_BRACKET} {NUMBER_LITERAL, +} {RIGHT_BRACKET} {IDENTIFIER, "OF"} VARIABLE_TYPE+;

REF_CURSOR_TYPE: {IDENTIFIER, "REF"} {IDENTIFIER, "CURSOR"} REF_CURSOR_RETURN;

REF_CURSOR_RETURN: ^;
REF_CURSOR_RETURN+: {IDENTIFIER, "RETURN"} REFERENCE_TYPE+;

CURSOR: ANNOTATIONS+ {IDENTIFIER, "CURSOR"} CURSOR_NAME+ PARAMETERS+ {IDENTIFIER, "IS"} CURSOR_QUERY+;

CURSOR_NAME: IDENTIFIER;

CURSOR_QUERY: TOKENS;

TOKENS: ^;
TOKENS: {+, +} TOKENS;

EXCEPTION: ANNOTATIONS+ EXCEPTION_NAME+ {IDENTIFIER, "EXCEPTION"};

EXCEPTION_NAME: IDENTIFIER;

PACKAGE_PRAGMA: GENERIC_PRAGMA+;
PACKAGE_PRAGMA: EXCEPTION_INIT+;

GENERIC_PRAGMA:
    {IDENTIFIER, "PRAGMA"}
    {IDENTIFIER, +}
    PRAGMA_PARAMETERS;

PRAGMA_PARAMETERS: ^;
PRAGMA_PARAMETERS+: {LEFT_BRACKET} PRAGMA_PARAMETER PRAGMA_PARAMETERS_ {RIGHT_BRACKET};

PRAGMA_PARAMETER+: IDENTIFIER;
PRAGMA_PARAMETER+: {STRING_LITERAL+, +};
PRAGMA_PARAMETER+: NUMERIC_PRAGMA_PARAMETER+;

NUMERIC_PRAGMA_PARAMETER: {ARITHMETIC_OPERATOR, "-"+} {NUMBER_LITERAL, +};
NUMERIC_PRAGMA_PARAMETER: {NUMBER_LITERAL, +};

PRAGMA_PARAMETERS_: ^;
PRAGMA_PARAMETERS_: {COMMA} PRAGMA_PARAMETER PRAGMA_PARAMETERS_;

EXCEPTION_INIT:
    {IDENTIFIER, "PRAGMA"}
    {IDENTIFIER, "EXCEPTION_INIT"}
    {LEFT_BRACKET}
    EXCEPTION_INIT_EXCEPTION+
    {COMMA}
    EXCEPTION_INIT_CODE+
    {RIGHT_BRACKET};

EXCEPTION_INIT_EXCEPTION: IDENTIFIER;

EXCEPTION_INIT_CODE+: NUMERIC_PRAGMA_PARAMETER;

SUBTYPE: ANNOTATIONS+ {IDENTIFIER, "SUBTYPE"} TYPE_NAME+ {IDENTIFIER, "IS"} VARIABLE_TYPE+;